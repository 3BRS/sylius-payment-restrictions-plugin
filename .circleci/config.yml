version: 2.1

workflows:
    php8.0:
        jobs:
            -   build:
                    name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
                    matrix:
                        parameters:
                            php_version: [ "8.0" ]
                            sylius_version: [ "1.12" ]
                            symfony_version: [ "5.4", "6.0" ]

    php8.1+:
        jobs:
            -   build:
                    name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
                    matrix:
                        parameters:
                            php_version: [ "8.1", "8.2" ]
                            sylius_version: [ "1.12" ]
                            symfony_version: [ "5.4", "6.0", "6.1", "6.2", "6.3", "6.4" ]

jobs:
    build:
        parameters:
            sylius_version:
                type: string
            symfony_version:
                type: string
            php_version:
                type: string
        docker:
            -   image: webdevops/php-nginx:<< parameters.php_version >>-alpine
                environment:
                    - DATABASE_URL=mysql://root:pass_root@127.0.0.1:3306/3brs_sylius_payment_restriction_plugin_%kernel.environment%?serverVersion=8.0
            -   image: cimg/mysql:8.0
                environment:
                    MYSQL_ROOT_PASSWORD: pass_root
                    MYSQL_USER: sylius
                    MYSQL_PASSWORD: pass
        steps:
            - checkout
            -   run: apk update
            # 'mariadb-connector-c' to avoid ERROR 1045 (28000): Plugin caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so: No such file or directory
            -   run: apk add yarn mysql-client mariadb-connector-c
            -   run: composer self-update

            # Sylius & Symfony in current matrix versions
            -   run: composer require "sylius/sylius:<< parameters.sylius_version >>.*" --no-interaction --no-update --no-scripts
            -   run: grep -o -E '"(symfony/[^"]+)"' composer.json | grep -v -E '(symfony/flex|symfony/webpack-encore-bundle)' | xargs printf '%s:<< parameters.symfony_version >>.* '| xargs composer require --no-interaction --no-update

            # COMPOSER PREFER DIST #
            #            -   restore_cache:
            #                    keys:
            #                        - vendor-cache-prefer-dist-sylius_<< parameters.sylius_version >>-symfony_<< parameters.symfony_version >>-php_<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
            -   run: composer update --no-interaction --prefer-dist
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   save_cache:
                    key: vendor-cache-prefer-dist-sylius_<< parameters.sylius_version >>-symfony_<< parameters.symfony_version >>-php_<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
                    paths:
                        - $(composer --no-interaction config --global home)
                        - ./vendor
                        - ./composer.lock
                        - $(yarn cache dir)
                        - ./tests/Application/node_modules
                        - ./tests/Application/yarn.lock
            -   run:
                    name: Wait for database
                    command: timeout 60s bash -c -- 'while ! nc -z localhost 3306; do sleep 0.1; done' \
                        && timeout 30s bash -c -- 'mysql --user=sylius --password=pass --host=localhost --port=3306 -e "exit"'
            -   run: (cd tests/Application && bin/console doctrine:database:create --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:schema:create --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: bin/behat
            -   run: bin/phpstan.sh
            -   run: bin/ecs.sh
            -   run: vendor/bin/phpspec run
            -   run: vendor/bin/psalm

            # COMPOSER PREFER LOWEST (oldest possible) #
            # has to delete vendor for next test with different libraries version to avoid Composer error 'Failed to extract...' if vendor dir cache does not exist
            -   run: rm -fr vendor composer.lock
            #            -   restore_cache:
            #                    keys:
            #                        - vendor-cache-prefer-lowest-sylius_<< parameters.sylius_version >>-symfony_<< parameters.symfony_version >>-php_<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
            -   run: COMPOSER_MEMORY_LIMIT=-1 composer update --no-interaction --prefer-lowest
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   save_cache:
                    key: vendor-cache-prefer-lowest-sylius_<< parameters.sylius_version >>-symfony_<< parameters.symfony_version >>-php_<< parameters.php_version >>-{{ checksum "composer.json" }}-{{ checksum "tests/Application/package.json" }}
                    paths:
                        - $(composer --no-interaction config --global home)
                        - ./vendor
                        - ./composer.lock
                        - $(yarn cache dir)
                        - ./tests/Application/node_modules
                        - ./tests/Application/yarn.lock
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: bin/behat
            -   run: bin/phpstan.sh
            -   run: bin/ecs.sh
            -   run: vendor/bin/phpspec run
            -   run: vendor/bin/psalm
